apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.zn.upctool"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled = true
    }
    // Error: "More than one file was found with OS independent path 'META-INF/INDEX.LIST'
    // The below fixes it
    // https://stackoverflow.com/questions/44342455/more-than-one-file-was-found-with-os-independent-path-meta-inf-license
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/INDEX.LIST'
    }
    buildTypes {
        // Storing api key in gradle.properties
        // https://medium.com/code-better/hiding-api-keys-from-your-android-repository-b23f5598b906
        debug {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'SEMANTICS_API_KEY', SEMANTICS_API_KEY
            buildConfigField 'String', 'SEMANTICS_API_SECRET', SEMANTICS_API_SECRET
            buildConfigField 'String', 'UPCDATABASE_API_KEY', UPCDATABASE_API_KEY
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'SEMANTICS_API_KEY', SEMANTICS_API_KEY
            buildConfigField 'String', 'SEMANTICS_API_SECRET', SEMANTICS_API_SECRET
            buildConfigField 'String', 'UPCDATABASE_API_KEY', UPCDATABASE_API_KEY
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0-rc01'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation project(":barcode-reader")

    // semantics3
    implementation 'com.semantics3:Sem3Java:1.2.4'

    // butterknife (view binding)
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    // timber (logging)
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // glide (image loading and caching)
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    // okhttp
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"

    // google cloud vision api
    implementation "com.google.cloud:google-cloud-vision:$googleCloudVisionVersion"
}
